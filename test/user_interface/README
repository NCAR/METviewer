To install:
Make sure that your Chrome browser is up to date

First install node js
https://nodejs.org/en/
Download the one recommended for most users - it should come with npm.
Make sure that it is available in your path.
Change directory to the directory where you find this (readme) file, which also contains the features
and the node_modules directories, and the package.json file.
issue the command
> npm install


To run:
From the metviewer-testing directory where you find this (readme) file ....
This shell script runs all avalable features in the features/directory:

> mvTest.sh

There are several options to mvTest...

the -p seconds option pauses for "seconds" seconds after generating the plot. example ... -p 10

the -s step options enters the debug console after each and every step. The debug console allows a limited amount of
webdriver debugging. If you do not type ".exit" and then press the return key before the default timeout expires
(something like 60 seconds) your debug session ends and the test fails.

the -b option allows the user to specify the browser in which tests are run. Supported browsers are chrome, phantomjs,
firefox, and safari. These tests perform best when Chrome is the browser used.


> mvTest.sh -?       prints the usage (shown below).

[-b browser chrome|phantomjs|safari|firefox] [-n featureName (can be regex)] [-s step] [-p seconds] [-h help] [feature]
 where metViewerUrl default is 'http://www.dtcenter.org/met/metviewer/metviewer1.jsp,'
 -p is for pause after plot n is number of seconds. feature default is 'all', outputFormat default is 'summary' outputFilePath default is stdout, and browser default is 'chrome'.
 Phantonjs is a headless browser used for batch testing Formats:
 json: prints results in json format.
 progress: appends one '.' for each feature as they run - gives a summary.
 snippets: prints only the code snippets for undefined steps.
 summary: prints summary after all the scenarios are executed.
available features are:
boxPlot
timeSeries


Examples:

./mvTest.sh -f boxPlot          -- this runs all of the boxplot tests

./mvTest.sh -f timeSeries       -- this runs all of the timeseries tests

./mvTest.sh -s 10               -- this requires you to type .exit into the debug console after every step

./mvTest.sh -p 20               -- this pauses for 20 seconds after generating the plot


