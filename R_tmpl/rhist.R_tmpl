setwd("#<r_work>#");

strDataFile = "#<data_file>#";
strPlotFile = "#<plot_file>#";

#
#  Plot Control Variables
#

listColors		= #<colors>#;
		
boolGridOn		= #<grid_on>#;

boolNormalizedHistogram  = #<normalized_histogram>#;

# read the plot data
dfPlot = read.delim(strDataFile);
listHistData = dfPlot[[2]];

# normalize to the number of observations if needed
if( boolNormalizedHistogram ){
  listHistData = listHistData / sum( listHistData );
}

listX = 1:length(listHistData);


# specify the output file
strPlotType = "#<plot_type>#";
if( "jpeg" == strPlotType ){
  jpeg(
  		strPlotFile,			# output file name, with appropriate extension
  		width=#<plot_width>#,	# width of the display region, in specified units
  		height=#<plot_height>#,	# height of the display region, in specified units
  		res=#<plot_res>#,		# resolution, in dots per inch
  		units="#<plot_units>#",	# units for height and width
  		pointsize = 12,
  		quality = 100
  	);
} else {
  bitmap(
  		strPlotFile,			# output file name, with appropriate extension
  		type="#<plot_type>#",	# type of bitmap
  		width=#<plot_width>#,	# width of the display region, in specified units
  		height=#<plot_height>#,	# height of the display region, in specified units
  		res=#<plot_res>#,		# resolution, in dots per inch
  		units="#<plot_units>#",	# units for height and width
  		taa=4,					# bits of anti-aliasing for graphics
  		gaa=4					# bits of anti-aliasing for text
  	);
}

# specify plot window formatting
par( 
	mar=#<mar>#,			# lines of margin in form c(bottom, left, top, right)
	mgp=#<mgp>#,			# margin line for axis title, axis labels and axis line in form c(title, labels, line)
	cex=#<cex>#,			# magnification for plot text
	las=2, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	fg="black"
);

# build the bar plot
barplot(
	listHistData,			# bar data 
	width = 1,				# vector of bar widths, recycled if necessary
	space = NULL,			# space left before each bar
	legend.text = NULL, 	# vector of text used to construct a legend
	beside = TRUE,			# logical value indicating stacked or side-by-side bars - TRUE: side-by-side, FALSE: stacked
	horiz = FALSE,			# logical value indicating horizontal or vertical bars
	col = listColors,		# vector of box colors
	border = par("fg"),		# box border
	tcl=.1,					# tick mark length
	ylim=#<y1_lim>#,		# y axis limits
	names.arg=listX,		# vector of names used as x labels
	las=#<xtlab_orient>#	# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
);
box();

# plot title
mtext(
	"#<plot_title>#",		# label
	font=#<title_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=3,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<title_size>#,		# relative magnification
	padj=#<title_offset>#,	# axis label perpendicular location adjustment
	adj=#<title_align>#,	# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# x-axis label
mtext(
	"#<x_label>#",			# label
	font=#<xlab_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=1,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<xlab_size>#,		# relative axis label magnification
	padj=#<xlab_offset>#,	# axis label perpendicular location adjustment
	adj=#<xlab_align>#,		# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# y-axis label
mtext(
	"#<y1_label>#",			# label
	font=#<ylab_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=2,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<ylab_size>#,		# relative axis label magnification
	padj=#<ylab_offset>#,	# axis label perpendicular location adjustment
	adj=#<ylab_align>#,		# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# add grid lines to the plot, if requested
if( TRUE == boolGridOn ){
	grid(
		lty=#<grid_lty>#,		# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
		col="#<grid_col>#",		# line color
		lwd=#<grid_lwd>#,		# line width
		nx=0,					# number of cells in x direction, NULL for default
		ny=NULL					# number of cells in y direction, NULL for default
	);
}

# plot caption
mtext(
	"#<plot_caption>#",			# caption
	font=#<caption_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	col="#<caption_col>#",		# font color
	las=0, 						# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=1,						# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<caption_size>#,		# relative magnification
	padj=#<caption_offset>#,	# axis label perpendicular location adjustment
	adj=#<caption_align>#,		# axis label parallel location adjustment
	line=1						# margin line, starting at 0 counting outwards
);

#<plot_cmd>#

dev.off();

