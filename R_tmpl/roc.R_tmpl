setwd("#<r_work>#");

strDataFile = "#<data_file>#";
strPlotFile = "#<plot_file>#";

boolRocPct = #<roc_pct>#;
boolRocCtc = #<roc_ctc>#;

dfData = read.delim(strDataFile);

# create the ROC points using PCT data 
if( TRUE == boolRocPct ){

	# create a data frame to hold the aggregated contingency table and ROC data
	listThresh = unique( sort( dfData$thresh_i ) );
	dfROC = data.frame(thresh = listThresh, n11 = NA, n10 = NA, n01 = NA, n00 = NA);
	
	# build the ROC contingency data table
	for( thresh in listThresh ){
		dfROC[dfROC$thresh == thresh,]$n11  = sum( dfData[dfData$thresh_i >  thresh,]$oy_i );
		dfROC[dfROC$thresh == thresh,]$n10  = sum( dfData[dfData$thresh_i >  thresh,]$on_i );
		dfROC[dfROC$thresh == thresh,]$n01  = sum( dfData[dfData$thresh_i <= thresh,]$oy_i );
		dfROC[dfROC$thresh == thresh,]$n00  = sum( dfData[dfData$thresh_i <= thresh,]$on_i );
	}
	
	# generate the pody and pofd scores from the contingency tables
	dfROC$pody = dfROC$n11 / (dfROC$n11 + dfROC$n01); 
	dfROC$pofd = dfROC$n10 / (dfROC$n10 + dfROC$n00);


# create the ROC points using the CTC data
} else if( TRUE == boolRocCtc ){
	
	# create the ROC point data from the components of the contingency tables
	dfROC = dfData[rev(order(dfData$thresh)),];
	dfROC$pody = dfROC$fy_oy / (dfROC$fy_oy + dfROC$fn_oy);
	dfROC$pofd = dfROC$fy_on / (dfROC$fy_on + dfROC$fn_on);
	
}

# initialize the plot data, appending a beginning and end point
listPOFD = c(1, dfROC$pofd, 0);
listPODY = c(1, dfROC$pody, 0);
listThresh = c("", as.vector(dfROC$thr), "");

#mar=c(5,4,4,2)
#mgp=c(1,1,0)
#cex=1
#plot_type="png16m"
#plot_width=8.5
#plot_height=8.5
#plot_res=72
#plot_units="in"
#title_font=2
#title_cex=1.4
#title_padj=-2
#title_adj=.5

# set up the bitmap device
bitmap(
	strPlotFile,			# output file name, with appropriate extension
	type="#<plot_type>#",	# type of bitmap
	width=#<plot_width>#,	# width of the display region, in specified units
	height=#<plot_height>#,	# height of the display region, in specified units
	res=#<plot_res>#,		# resolution, in dots per inch
	units="#<plot_units>#",	# units for height and width
	taa=4,					# bits of anti-aliasing for graphics
	gaa=4					# bits of anti-aliasing for text
);

# specify plot window formatting
par( 
	mar=#<mar>#,			# lines of margin in form c(bottom, left, top, right)
	mgp=#<mgp>#,			# margin line for axis title, axis labels and axis line in form c(title, labels, line)
	cex=#<cex>#,			# magnification for plot text
	las=2 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
);

# create a new plot with no axes
plot(
	x=listPOFD,				# series x data
	y=listPODY,				# series y data
	type="n",				# series line type - p: points, l: lines, o: overplotted points and lines,  
							#   b or c: points joined by lines, s or S: stair steps, h: histogram, n: nothing
	xaxt="n",				# x-axis type - n: no axis, s: compatibility with l and t
	xaxs="r",				# x-axis style - r: regular, i: internal
	yaxt="n",				# y1-axis type - n: no axis, s: compatibility with l and t
	yaxs="r",				# x-axis style - r: regular, i: internal
	xlim=c(0,1),			# x-axis limits in form c(x1,x2); x1 > x2 reverses axis
	ylim=c(0,1),			# y1-axis limits		
	xlab="",				# x-axis label
	ylab="",				# y1-axis label
	fg="gray"
);

# specify the axis formatting
par(
	usr=c(0, 1, 0, 1),		# vector c(x1, x2, y1, y2) giving the extreme coordinates of the plotting region
	xpd=NA					# plot clipping - FALSE: plot, TRUE: figure, NA: device
);

# plot title
mtext(
	"#<plot_title>#",		# label
	font=#<title_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=3,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<title_size>#,		# relative magnification
	padj=#<title_offset>#,	# axis label perpendicular location adjustment
	adj=#<title_align>#,	# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# x-axis label
mtext(
	"#<x_label>#",			# label
	font=#<xlab_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=1,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<xlab_size>#,		# relative axis label magnification
	padj=#<xlab_offset>#,	# axis label perpendicular location adjustment
	adj=#<xlab_align>#,		# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# specify the x-axis
axis(
	1,						# axis of interest, 1: below, 2: left, 3: above and 4: right 
	at=seq(0,1,.1),			# locations of tick marks
	tick=TRUE,				# tick marks on/off
	tck=.01, 				# length of tick marks as a fraction of plot window
	las=#<xtlab_orient>#,	# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	padj=#<xtlab_perp>#,	# axis label perpendicular location adjustment 
	hadj=#<xtlab_horiz>#,	# axis label parallel location adjustment 
	cex.axis=#<xtlab_size>#,# relative axis label magnification 
	col="gray"				# axis color
);

# y-axis label
mtext(
	"#<y1_label>#",			# label
	font=#<ylab_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=2,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<ylab_size>#,		# relative axis label magnification
	padj=#<ylab_offset>#,	# axis label perpendicular location adjustment
	adj=#<ylab_align>#,		# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# specify the y-axis
axis(
	2,						# axis of interest, 1: below, 2: left, 3: above and 4: right
	at=seq(0,1,.1),			# locations of tick marks
	labels=TRUE,			# tick labels on/off
	tick=TRUE,				# tick marks on/off
	tck=.01, 				# length of tick marks as a fraction of plot window
	las=#<ytlab_orient>#,	# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	padj=#<ytlab_perp>#,	# axis label perpendicular location adjustment
	hadj=#<ytlab_horiz>#,	# axis label parallel location adjustment
	cex.axis=#<ytlab_size>#,# relative axis label magnification 
	col="gray"				# axis color
);

# store the series formatting for the ROC curve
listColors = #<colors>#;
listPch = #<pch>#;
listType = #<type>#;
listLty = #<lty>#;
listLwd = #<lwd>#;

# plot the series line
lines(
	x=listPOFD,				# x coordinates
	y=listPODY,				# y coordinates
	type=listType[1],		# series line type - p: points, l: lines, o: overplotted points and lines,  
							#   b or c: points joined by lines, s or S: stair steps, h: histogram, n: nothing 		
	pch=listPch[1],			# point symbol - see example(points)
	font=5,					# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	lty=listLty[1],			# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
	col=listColors[1],		# line color
	lend=1,					# line end style - 0: rounded, 1: butt, 2: square
	cex=1,					# line magnification
	lwd=listLwd[1]			# line width
);

# add point thresholds
text(
	x=listPOFD,				# x coordinates
	y=listPODY,				# y coordinates
	labels=listThresh,		# point thresholds
	adj=c(-.2,1)			# relative position adjustment
);

# draw the no-skill line
abline(
	a=0,					# intercept
	b=1,					# slope
	lty=2,					# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
	col="gray",				# line color
	lend=1,					# line end style - 0: rounded, 1: butt, 2: square
	cex=1,					# line magnification
	lwd=1.5,				# line width
	xpd=FALSE				# plot clipping - FALSE: plot, TRUE: figure, NA: device
);

# plot caption
mtext(
	"#<plot_caption>#",				# caption
	font=#<caption_weight>#,		# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	col="#<caption_col>#",			# font color
	las=0, 							# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=1,							# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<caption_size>#,			# relative magnification
	padj=#<caption_offset>#,		# axis perpendicular location adjustment
	adj=#<caption_align>#,			# axis parallel location adjustment
	line=1							# margin line, starting at 0 counting outwards
);

#<plot_cmd>#

dev.off();

