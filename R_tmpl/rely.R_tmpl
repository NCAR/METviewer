setwd("#<r_work>#");

source("include/util_plot.R");

strDataFile = "#<data_file>#";
strPlotFile = "#<plot_file>#";

boolEventHist = #<rely_event_hist>#;

dfPct = read.delim(strDataFile);

# adjust the percentile thresholds to the midpoints
dfPct$thresh_ii = dfPct$thresh_i;
for(i in 2:nrow(dfPct)){
	dfPct[i-1,]$thresh_i = 0.5*(dfPct[i,]$thresh_ii + dfPct[i-1,]$thresh_ii);
}
dfPct[i,]$thresh_i = 0.5*(1 + dfPct[i,]$thresh_ii);

# calculate vectors and constants to use below
dfPct$n_i = dfPct$oy_i + dfPct$on_i;		# n_j.
dfPct = dfPct[0 != dfPct$n_i,];
T = sum(dfPct$n_i);							# T
oy_total = sum(dfPct$oy_i);					# n_.1
o_bar = oy_total / T;						# n_.1 / T
dfPct$o_bar_i = dfPct$oy_i / dfPct$n_i;		# o_bar_i

# row-based calculations
dfPct$oy_tp			= dfPct$oy_i / T;
dfPct$on_tp			= dfPct$on_i / T;
dfPct$calibration	= dfPct$oy_i / dfPct$n_i;
dfPct$refinement	= dfPct$n_i / T;
dfPct$likelihood	= dfPct$oy_i / oy_total;
dfPct$baserate		= dfPct$o_bar_i;
dfPct$no_skill		= 0.5*(dfPct$thresh_i + o_bar);

# initialize the plot data
listCal		= dfPct$calibration;
listThresh	= dfPct$thresh_i;

# set up the bitmap device
bitmap(
	strPlotFile,			# output file name, with appropriate extension
	type="#<plot_type>#",	# type of bitmap
	width=#<plot_width>#,	# width of the display region, in specified units
	height=#<plot_height>#,	# height of the display region, in specified units
	res=#<plot_res>#,		# resolution, in dots per inch
	units="#<plot_units>#",	# units for height and width
	taa=4,					# bits of anti-aliasing for graphics
	gaa=4					# bits of anti-aliasing for text
);

# specify plot window formatting
par( 
	mar=#<mar>#,			# lines of margin in form c(bottom, left, top, right)
	mgp=#<mgp>#,			# margin line for axis title, axis labels and axis line in form c(title, labels, line)
	cex=#<cex>#,			# magnification for plot text
	las=2 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
);

# create a new plot with no axes
plot(
	x=listThresh,			# series x data
	y=listCal,				# series y data
	type="n",				# series line type - p: points, l: lines, o: overplotted points and lines,  
							#   b or c: points joined by lines, s or S: stair steps, h: histogram, n: nothing
	xaxt="n",				# x-axis type - n: no axis, s: compatibility with l and t
	xaxs="r",				# x-axis style - r: regular, i: internal
	yaxt="n",				# y1-axis type - n: no axis, s: compatibility with l and t
	yaxs="r",				# x-axis style - r: regular, i: internal
	xlim=c(0,1),			# x-axis limits in form c(x1,x2); x1 > x2 reverses axis
	ylim=c(0,1),			# y1-axis limits		
	xlab="",				# x-axis label
	ylab="",				# y1-axis label
	fg="gray"
);

# specify the axis formatting
par(
	usr=c(0, 1, 0, 1),		# vector c(x1, x2, y1, y2) giving the extreme coordinates of the plotting region
	xpd=NA					# plot clipping - FALSE: plot, TRUE: figure, NA: device
);

# plot title
mtext(
	"#<plot_title>#",		# label
	font=#<title_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=3,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<title_size>#,		# relative magnification
	padj=#<title_offset>#,	# axis label perpendicular location adjustment
	adj=#<title_align>#,	# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# x-axis label
mtext(
	"#<x_label>#",			# label
	font=#<xlab_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=1,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<xlab_size>#,		# relative axis label magnification
	padj=#<xlab_offset>#,	# axis label perpendicular location adjustment
	adj=#<xlab_align>#,		# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# specify the x-axis
axis(
	1,						# axis of interest, 1: below, 2: left, 3: above and 4: right 
	at=seq(0,1,.1),			# locations of tick marks
	tick=TRUE,				# tick marks on/off
	tck=.01, 				# length of tick marks as a fraction of plot window
	las=#<xtlab_orient>#,	# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	padj=#<xtlab_perp>#,	# axis label perpendicular location adjustment 
	hadj=#<xtlab_horiz>#,	# axis label parallel location adjustment 
	cex.axis=#<xtlab_size>#,# relative axis label magnification 
	col="gray"				# axis color
);

# y-axis label
mtext(
	"#<y1_label>#",			# label
	font=#<ylab_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=2,					# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<ylab_size>#,		# relative axis label magnification
	padj=#<ylab_offset>#,	# axis label perpendicular location adjustment
	adj=#<ylab_align>#,		# axis label parallel location adjustment
	line=1					# margin line, starting at 0 counting outwards
);

# store the series formatting for the reliability curve and event histogram
listColors = #<colors>#;
listPch = #<pch>#;
listType = #<type>#;
listLty = #<lty>#;
listLwd = #<lwd>#;

# check ensure that there are enough formatting settings
if( boolEventHist == TRUE && 2 > length(listColors) ){
	write("  **  ERROR: insufficient formatting specified for event histogram", stderr());
	quit(status=1);
}

# if the event histogram is activated, plot the number of events by threshold on the y2 axis
if( boolEventHist ){
	
	# determine and set the limits for the y2 axis
	listY1Usr = par()$usr;
	listY2Tick = pretty(range(dfPct$n_i), 4);
	listY2Usr = c(par()$usr[1:2], listY2Tick[1], listY2Tick[length(listY2Tick)]);
	par(usr=listY2Usr, xaxs="r");
	
	# add the y2 axis
	axis(
		4,						# axis of interest, 1: below, 2: left, 3: above and 4: right
		at=listY2Tick,			# locations of tick marks
		labels=TRUE,			# tick labels on/off
		tick=TRUE,				# tick marks on/off
		tck=.01, 				# length of tick marks as a fraction of plot window
		las=#<y2tlab_orient>#,	# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
		padj=#<y2tlab_perp>#,	# axis label perpendicular location adjustment
		hadj=#<y2tlab_horiz>#,	# axis label parallel location adjustment
		cex.axis=#<y2tlab_size>#,# relative axis label magnification 
		col="gray"				# axis color
	);
	
	# plot the histogram of events by threshold on the y2 axis
	lines(
		x=listThresh,			# x coordinates
		y=dfPct$n_i,			# y coordinates
		type=listType[2],		# series line type - p: points, l: lines, o: overplotted points and lines,  
								#   b or c: points joined by lines, s or S: stair steps, h: histogram, n: nothing 		
		pch=listPch[2],			# point symbol - see example(points)
		lty=listLty[2],			# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
		col=listColors[2],		# line color
		lend=1,					# line end style - 0: rounded, 1: butt, 2: square
		cex=1,					# line magnification
		lwd=listLwd[2]			# line width
	);
	
	# y2 axis label
	mtext(
		"#<y2_label>#",			# label
		font=#<y2lab_weight>#,	# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
		las=0, 					# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
		side=4,					# axis of interest, 1: below, 2: left, 3: above and 4: right
		cex=#<y2lab_size>#,		# relative axis label magnification
		padj=#<y2lab_offset>#,	# axis label perpendicular location adjustment
		adj=#<y2lab_align>#,	# axis label parallel location adjustment
		line=1					# margin line, starting at 0 counting outwards
	);
	
	# set the axis bounds for y1 plotting
	par(new=TRUE, usr=listY1Usr, xaxs="r");
}

# specify the y1-axis
axis(
	2,						# axis of interest, 1: below, 2: left, 3: above and 4: right
	at=seq(0,1,.1),			# locations of tick marks
	labels=TRUE,			# tick labels on/off
	tick=TRUE,				# tick marks on/off
	tck=.01, 				# length of tick marks as a fraction of plot window
	las=#<ytlab_orient>#,	# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	padj=#<ytlab_perp>#,	# axis label perpendicular location adjustment
	hadj=#<ytlab_horiz>#,	# axis label parallel location adjustment
	cex.axis=#<ytlab_size>#,# relative axis label magnification 
	col="gray"				# axis color
);

# plot the series line
lines(
	x=listThresh,			# x coordinates
	y=listCal,				# y coordinates
	type=listType[1],		# series line type - p: points, l: lines, o: overplotted points and lines,  
							#   b or c: points joined by lines, s or S: stair steps, h: histogram, n: nothing 		
	pch=listPch[1],			# point symbol - see example(points)
	font=5,					# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	lty=listLty[1],			# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
	col=listColors[1],		# line color
	lend=1,					# line end style - 0: rounded, 1: butt, 2: square
	cex=1,					# line magnification
	lwd=listLwd[1]			# line width
);

# draw the max-skill line
abline(
	a=0,					# intercept
	b=1,					# slope
	lty=1,					# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
	col="gray",				# line color
	lend=1,					# line end style - 0: rounded, 1: butt, 2: square
	cex=1,					# line magnification
	lwd=1.5,				# line width
	xpd=FALSE				# plot clipping - FALSE: plot, TRUE: figure, NA: device
);

# draw the no-skill line
dblNoSkillM = (dfPct[2,]$no_skill - dfPct[1,]$no_skill) / (dfPct[2,]$thresh_i - dfPct[1,]$thresh_i);
dblNoSkillB = dfPct[1,]$no_skill - dblNoSkillM * dfPct[1,]$thresh_i;
abline(
	a=dblNoSkillB,			# intercept
	b=dblNoSkillM,			# slope
	lty=2,					# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
	col="gray",				# line color
	lend=1,					# line end style - 0: rounded, 1: butt, 2: square
	cex=1,					# line magnification
	lwd=1.5,				# line width
	xpd=FALSE				# plot clipping - FALSE: plot, TRUE: figure, NA: device
);

# draw the no-resolution line
abline(
	a=o_bar,				# intercept
	b=0,					# slope
	lty=2,					# line type - 0: blank, 1: solid, 2: dashed, 3: dotted, 4: dotdash, 5: longdash, 6: twodash
	col="gray",				# line color
	lend=1,					# line end style - 0: rounded, 1: butt, 2: square
	cex=1,					# line magnification
	lwd=1.5,				# line width
	xpd=FALSE				# plot clipping - FALSE: plot, TRUE: figure, NA: device
);

# plot caption
mtext(
	"#<plot_caption>#",				# caption
	font=#<caption_weight>#,		# 1: plain text, 2: bold, 3: italic, 4: bold italic and 5: symbol
	col="#<caption_col>#",			# font color
	las=0, 							# axis label orientation - 0: parallel to axis, 1: horiz, 2: perp to axis, 3: vert
	side=1,							# axis of interest, 1: below, 2: left, 3: above and 4: right
	cex=#<caption_size>#,			# relative magnification
	padj=#<caption_offset>#,		# axis perpendicular location adjustment
	adj=#<caption_align>#,			# axis parallel location adjustment
	line=1							# margin line, starting at 0 counting outwards
);

#<plot_cmd>#

dev.off();

